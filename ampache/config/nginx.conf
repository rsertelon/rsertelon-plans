daemon off;
pid {{pkg.svc_var_path}}/pid;

worker_processes  auto;

events {
    worker_connections  1024;
}

http {
    client_body_temp_path {{pkg.svc_var_path}}/nginx/client-body;
    fastcgi_temp_path {{pkg.svc_var_path}}/nginx/fastcgi;
    proxy_temp_path {{pkg.svc_var_path}}/nginx/proxy;
    scgi_temp_path {{pkg.svc_var_path}}/nginx/scgi_temp_path;
    uwsgi_temp_path {{pkg.svc_var_path}}/nginx/uwsgi;

    include        {{pkgPathFor "core/nginx"}}/config/mime.types;
    default_type   application/octet-stream;

    sendfile       on;
    tcp_nopush     on;
    tcp_nodelay    on;

    keepalive_timeout  65;

    gzip  on;
    gzip_vary on;
    gzip_min_length 256;
    gzip_types
	application/atom+xml
	application/javascript
	application/json
	application/rss+xml
	application/vnd.ms-fontobject
	application/x-font-ttf
	application/x-web-app-manifest+json
	application/xhtml+xml
	application/xml
	font/opentype
	image/svg+xml
	image/x-icon
	text/css
	text/plain
	text/x-component;

    gzip_disable "MSIE [1-6]\.";

    server {
        listen {{cfg.bind.address}}:{{cfg.bind.port}};

        error_log       {{pkg.svc_var_path}}/error.log; # notice;
        access_log      {{pkg.svc_var_path}}/access.log;
        rewrite_log     on;

        client_max_body_size 100M;

        root {{pkg.svc_data_path}}/public/;
        index index.php index.html;

        server_name _;

        # Use secure headers to avoid XSS and many other things
        add_header X-Content-Type-Options nosniff;
        add_header X-XSS-Protection "1; mode=block";
        add_header X-Robots-Tag none;
        add_header X-Download-Options noopen;
        add_header X-Permitted-Cross-Domain-Policies none;
        add_header X-Frame-Options "SAMEORIGIN" always;
        add_header Referrer-Policy "no-referrer";
        add_header Content-Security-Policy "script-src 'self' 'unsafe-inline' 'unsafe-eval'; frame-src 'self'; object-src 'self'";

        server_tokens off;
        fastcgi_hide_header X-Powered-By;

        location / {
            limit_except GET POST HEAD{
                deny all;
            }
            try_files $uri $uri/ /index.php;
        }

        # Rewrite rule for Subsonic backend
        if ( !-d $request_filename ) {
            rewrite ^/rest/(.*).view$ /rest/index.php?action=$1 last;
            rewrite ^/rest/fake/(.+)$ /play/$1 last;
        }

        # Rewrite rule for Channels
        if (!-d $request_filename){
            rewrite ^/channel/([0-9]+)/(.*)$ /channel/index.php?channel=$1&target=$2 last;
        }

        # Beautiful URL Rewriting
        rewrite ^/play/ssid/(\w+)/type/(\w+)/oid/([0-9]+)/uid/([0-9]+)/name/(.*)$ /play/index.php?ssid=$1&type=$2&oid=$3&uid=$4&name=$5 last;
        rewrite ^/play/ssid/(\w+)/type/(\w+)/oid/([0-9]+)/uid/([0-9]+)/client/(.*)/noscrobble/([0-1])/name/(.*)$ /play/index.php?ssid=$1&type=$2&oid=$3&uid=$4&client=$5&noscrobble=$6&name=$7 last;
        rewrite ^/play/ssid/(.*)/type/(.*)/oid/([0-9]+)/uid/([0-9]+)/client/(.*)/noscrobble/([0-1])/player/(.*)/name/(.*)$ /play/index.php?ssid=$1&type=$2&oid=$3&uid=$4&client=$5&noscrobble=$6&player=$7&name=$8 last;
        rewrite ^/play/ssid/(.*)/type/(.*)/oid/([0-9]+)/uid/([0-9]+)/client/(.*)/noscrobble/([0-1])/bitrate/([0-9]+)/player/(.*)/name/(.*)$ /play/index.php?ssid=$1&type=$2&oid=$3&uid=$4&client=$5&noscrobble=$6&bitrate=$7player=$8&name=$9 last;
        rewrite ^/play/ssid/(.*)/type/(.*)/oid/([0-9]+)/uid/([0-9]+)/client/(.*)/noscrobble/([0-1])/transcode_to/(w+)/bitrate/([0-9]+)/player/(.*)/name/(.*)$ /play/index.php?ssid=$1&type=$2&oid=$3&uid=$4&client=$5&noscrobble=$6&transcode_to=$7&bitrate=$8&player=$9&name=$10 last;

        # the following line was needed for me to get downloads of single songs to work
        rewrite ^/play/ssid/(.*)/type/(.*)/oid/([0-9]+)/uid/([0-9]+)/action/(.*)/name/(.*)$ /play/index.php?ssid=$1&type=$2&oid=$3&uid=$4action=$5&name=$6 last;

        # used for transfering art work to some clients.
        location /play {
            if (!-e $request_filename) {
            rewrite ^/play/art/([^/]+)/([^/]+)/([0-9]+)/thumb([0-9]*)\.([a-z]+)$ /image.php?object_type=$2&object_id=$3&auth=$1 last;
            }

            rewrite ^/([^/]+)/([^/]+)(/.*)?$ /play/$3?$1=$2;
            rewrite ^/(/[^/]+|[^/]+/|/?)$ /play/index.php last;
            break;
        }

        location /rest {
            limit_except GET POST {
                deny all;
            }
        }

        location ^~ /bin/ {
            deny all;
            return 403;
        }

        location ^~ /config/ {
            deny all;
            return 403;
        }

        location ~ \.php$ {
                include {{pkgPathFor "core/nginx"}}/config/fastcgi.conf;

                try_files $uri =404;
                fastcgi_split_path_info ^(.+\.php)(/.+)$;
                fastcgi_pass {{bind.php.first.cfg.address}}:{{bind.php.first.cfg.port}};
                fastcgi_index index.php;
                include {{pkgPathFor "core/nginx"}}/config/fastcgi_params;
                fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                fastcgi_param PATH_INFO $fastcgi_path_info;
        }

        location ~ /\.ht {
                deny all;
        }
    }
}